<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Appia: Group communication and protocol composition framework library
 * Copyright 2006 University of Lisbon
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. 
 *
 * Initial developer(s): Alexandre Pinto and Nuno Carvalho.
 * Contributor(s): See Appia web page for a list of contributors.
 -->

<project basedir="." default="dist" name="APPIA">
    <property name="APPIA.src" location="src"/>
    <property name="APPIA.classes" location="classes"/>
    <property name="APPIA.libs" location="lib"/>
    <property name="APPIA.dist" location="dist"/>
    <property name="APPIA.doc" location="doc"/>
    <property name="APPIA.jarname" value="appia"/>
	<property file="appia.properties"/>

	<path id="project.classpath">
        <pathelement location="${APPIA.classes}"/>
    	<fileset dir="${APPIA.libs}">
    		<include name="*"/>
    	</fileset>
    </path>
	
    <target name="init">
		<mkdir dir="${APPIA.classes}"/>
    	<mkdir dir="${APPIA.doc}"/>
    	<mkdir dir="${APPIA.dist}"/>    	
  	</target>

    <!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" description="Cleans doc and classes directories">
    	<delete dir="${APPIA.classes}"/>
    	<delete dir="${APPIA.doc}"/>
    	<delete dir="${APPIA.dist}"/>
    </target>


    <!-- ================================= 
          target: build
         ================================= -->
    <target name="build" depends="init">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac destdir="${APPIA.classes}" encoding="ISO8859-1">
            <src path="${APPIA.src}"/>
            <classpath refid="project.classpath"/>
        </javac>
    </target>
	

    <!-- ================================= 
          target: doc              
         ================================= -->
    <target name="doc" depends="init" description="Creates Appia Javadoc">
        <javadoc sourcepath="${APPIA.src}" destdir="${APPIA.doc}" charset="ISO8859-1" encoding="ISO8859-1" use="true" >
        	<header>Appia Documentation</header>
        	<doctitle>Appia version ${APPIA.version}</doctitle>
        	<bottom>
        		<![CDATA[COPYRIGHT 2006, University of Lisbon<BR>For updates and related information please see <A HREF="http://appia.di.fc.ul.pt/">Appia Home Page</A> or <A HREF="http://appia.continuent.org">Continuent GForge</A><BR>Send questions, sugestions or remarks to <A HREF="mailto:appia@continuent.org">appia@continuent.org</A>]]>
        	</bottom>
			<classpath>
		    	<fileset dir="${APPIA.libs}">
		    		<include name="*"/>
		    	</fileset>				
			</classpath>
	        <packageset dir="${APPIA.src}" >
        		<include name="**"/>
        	</packageset>
        </javadoc>
    </target>
	
    <!-- ================================= 
          target: jar              
         ================================= -->
    <target name="jar" depends="build" description="Create Appia Jar file.">
        <jar destfile="${APPIA.dist}/${APPIA.jarname}-${APPIA.version}.jar" basedir="${APPIA.classes}"/>
    </target>


    <!-- ================================= 
          target: dist              
         ================================= -->
    <target name="dist" depends="jar" description="Distribution">
    	<copy todir="${APPIA.dist}">
			<fileset dir="${APPIA.libs}">
				<include name="*"/>
			</fileset>
    	</copy>
    	<chmod perm="ugo+x" dir="." includes="*.sh" verbose="true" />
    	
    	<echo message="Build completed with sucess. Please add all jar files in the dist directory to your CLASSPATH."/>
    	<echo message="To run a test application and validate the instalation, please run the validate.sh shell script."/>
    	<echo message="Run './bin/validate.sh' (on lunix or Mac OS X) or validate.bat (on windows) to run validation tests."/>
    </target>
</project>
